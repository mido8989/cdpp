<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hyundaimotors.hmb.cdppapp.mapper.IFHMBSAPCDPP0079Mapper">
    <insert id="insertRepair" parameterType="IFHMBSAPCDPP0079Dto" useGeneratedKeys="true" keyProperty="rowId" keyColumn="row_id">
        insert into landing.if_in_repair_order(
            created
            , created_by
            , last_upd
            , last_upd_by
            , soid
            , dealercode
            , vincode
            , mileage
            , cpf
            , opendt
            , closedt
            , status
            , total_value
        )values(
            now()
            , 'interface'
            , now()
            , 'interface'
            , #{soid}
            , #{dealercode}
            , #{vincode}
            , #{mileage}
            , #{cpf}
            , #{opendt}
            , #{closedt}
            , #{status}
            , #{totalValue}
        )
    </insert>
    <insert id="insertRepairService" parameterType="IFHMBSAPCDPP0079Dto">
        insert into landing.if_in_repair_order_service(
            par_row_id
            , created
            , created_by
            , last_upd
            , last_upd_by
            , soid
            , dealercode
            , vincode
            , itmnum
            , sotype
            , codsrc
            , zdesc
            , zqty
            , value
            , erdat
            , erzet
            , aedat
            , aezet
        )values
        <foreach collection="listOfService" item="item" separator=",">
            (
                #{rowId}
                , now()
                , 'interface'
                , now()
                , 'interface'
                , #{item.soid}
                , #{item.dealercode}
                , #{item.vincode}
                , #{item.itmnum}
                , #{item.sotype}
                , #{item.codsrc}
                , #{item.zdesc}
                , #{item.zqty}
                , #{item.value}
                , nullif(#{item.erdat},'')::date
                , nullif(#{item.erzet},'')::time
                , nullif(#{item.aedat},'')::date
                , nullif(#{item.aezet},'')::time
            )
        </foreach>
    </insert>
    <insert id="insertRepairPart" parameterType="IFHMBSAPCDPP0079Dto">
        insert into landing.if_in_repair_parts(
            par_row_id
            , created
            , created_by
            , last_upd
            , last_upd_by
            , soid
            , dealercode
            , vincode
            , itmnum
            , sotype
            , pncode
            , zdesc
            , zqty
            , value
            , erdat
            , erzet
            , aedat
            , aezet
        )values
        <foreach collection="listOfParts" item="item" separator=",">
            (
                #{rowId}
                , now()
                , 'interface'
                , now()
                , 'interface'
                , #{item.soid}
                , #{item.dealercode}
                , #{item.vincode}
                , #{item.itmnum}
                , #{item.sotype}
                , #{item.pncode}
                , #{item.zdesc}
                , #{item.zqty}
                , #{item.value}
                , nullif(#{item.erdat},'')::date
                , nullif(#{item.erzet},'')::time
                , nullif(#{item.aedat},'')::date
                , nullif(#{item.aezet},'')::time
            )
        </foreach>
    </insert>

    <insert id="transferProcess" statementType="CALLABLE" parameterType="hashMap">
        call process.if_in_repair_order(#{PARAM_ID,jdbcType=VARCHAR,mode=IN});
    </insert>

    <select id="getAssetRowId" parameterType="String" resultType="String">
        select
            asset_id as assetRowId
        from
            process.zhbrsdt1728 zs1728
        where
            zs1728.ro_id = #{assetRowId}
    </select>

    <insert id="transferReplica" statementType="CALLABLE" parameterType="hashMap">
        call replica.if_in_repair_order(#{PARAM_ID,jdbcType=VARCHAR,mode=IN});
    </insert>

</mapper>

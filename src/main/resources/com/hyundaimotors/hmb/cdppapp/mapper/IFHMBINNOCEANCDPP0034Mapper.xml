<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hyundaimotors.hmb.cdppapp.mapper.IFHMBINNOCEANCDPP0034Mapper">
    
    <insert id="insertServiceRequest" parameterType="IFHMBINNOCEANCDPP0034Dto" useGeneratedKeys="true" keyProperty="rowId" keyColumn="row_id">
        insert into landing.if_service_request_ws_wf(
            created
            , created_by
            , last_upd
            , last_upd_by
            , protocol
            , reason
            , level1
            , level2
            , level3
            , level4
            , source
            , method
            , description
            , status
            , priority
            , solution
            , serialnumber
            , anonymousflag
            , contactid
            , accountid
            , tendency
            , satisfaction
            , dealerid
            , causingarea
            , imobilizationdate
            , relatedmodel
            , quotedescription
            , enginetransmission
            , version
            , versionprice
            , color
            , colorprice
            , finalprice
            , carreplacementintention
            , roadservicerequest
            , integrationid
            , tdconfirmed
            , tdtime
            , tddate
            , salesrepid
            , pneflag
            , campaignid
            , sourcetag
            , estoque
            , medium
            , content
            , campaign
            , additionalcomments
            , causingperson
            , custrepresentative
            , custrepresentativerel
            , diagnosisdifficultyflg
            , diagnosispendingflg
            , dlrdescription
            , dlrfup
            , dlrpending
            , dlrretractionflg
            , dlrreversal
            , hotlineflg
            , hotlinenum
            , hotlineopendt
            , purchaseproposalnum
            , pwaflg
            , pwanum
            , pwaopendt
            , recurrenceflg
            , recurrencenum
            , vehicledeliverydt
            , vehicledeliveryflg
            , wantsloan
            , loantype
            , installmentsamt
            , downpayment
            , usedcarasdownpaymnt
            , dlrtemperature
            , paymnt_date
            , paymnt_method 
            , paymnt_status 
            , reservation_amount 
            , form 
            , sched_dt
            , sched_type 
            , used_brand 
            , used_chassi 
            , used_color 
            , used_km 
            , used_max_price 
            , used_med_price 
            , used_min_price 
            , used_model 
            , used_plate 
            , used_version 
            , used_year 
        )values(    
            now()
            , 'interface'
            , now()
            , 'interface'
            , #{serviceRequest.protocol}
            , #{serviceRequest.reason}
            , #{serviceRequest.level1}
            , #{serviceRequest.level2}
            , #{serviceRequest.level3}
            , #{serviceRequest.level4}
            , #{serviceRequest.source}
            , #{serviceRequest.method}
            , #{serviceRequest.description}
            , #{serviceRequest.status}
            , #{serviceRequest.priority}
            , #{serviceRequest.solution}
            , #{serviceRequest.serialNumber}
            , #{serviceRequest.anonymousFlag}
            , #{serviceRequest.contactId}
            , #{serviceRequest.accountId}
            , #{serviceRequest.tendency}
            , #{serviceRequest.satisfaction}
            , #{serviceRequest.dealerId}
            , #{serviceRequest.causingArea}
            , to_date(concat(SPLIT_PART(#{serviceRequest.imobilizationDate}, '/', 3)||'-'||SPLIT_PART(#{serviceRequest.imobilizationDate}, '/', 2)||'-'||SPLIT_PART(#{serviceRequest.imobilizationDate}, '/', 1)),'YYYY-MM-DD')
            , #{serviceRequest.relatedModel}
            , #{serviceRequest.quoteDescription}
            , #{serviceRequest.engineTransmission}
            , #{serviceRequest.version}
            , #{serviceRequest.versionPrice}
            , #{serviceRequest.color}
            , #{serviceRequest.colorPrice}
            , #{serviceRequest.finalPrice}
            , #{serviceRequest.carReplacementIntention}
            , #{serviceRequest.roadserviceRequest}
            , #{serviceRequest.integrationId}
            , #{serviceRequest.tdConfirmed}
            , #{serviceRequest.tdTime}
            , to_date(#{serviceRequest.tdDate},'YYYY-MM-DD')
            , #{serviceRequest.salesrepId}
            , #{serviceRequest.pneFlag}
            , #{serviceRequest.campaignId}
            , #{serviceRequest.sourceTag}
            , #{serviceRequest.estoque}
            , #{serviceRequest.medium}
            , #{serviceRequest.content}
            , #{serviceRequest.campaign}
            , #{serviceRequest.additionalComments}
            , #{serviceRequest.causingPerson}
            , #{serviceRequest.custRepresentative}
            , #{serviceRequest.custRepresentativeRel}
            , #{serviceRequest.diagnosisDifficultyFlg}
            , #{serviceRequest.diagnosisPendingFlg}
            , #{serviceRequest.dlrDescription}
            , #{serviceRequest.dlrFup}
            , #{serviceRequest.dlrPending}
            , #{serviceRequest.dlrRetractionFlg}
            , #{serviceRequest.dlrReversal}
            , #{serviceRequest.hotlineFlg}
            , #{serviceRequest.hotlineNum}
            , to_date(#{serviceRequest.hotlineOpenDt},'YYYY-MM-DD')
            , #{serviceRequest.purchaseProposalNum}
            , #{serviceRequest.pwaFlg}
            , #{serviceRequest.pwaNum}
            , to_date(#{serviceRequest.pwaOpenDt},'YYYY-MM-DD')
            , #{serviceRequest.recurrenceFlg}
            , #{serviceRequest.recurrenceNum}
            , to_date(#{serviceRequest.vehicleDeliveryDt},'YYYY-MM-DD')
            , #{serviceRequest.vehicleDeliveryFlg}
            , #{serviceRequest.wantsLoan}
            , #{serviceRequest.loanType}
            , #{serviceRequest.installmentsAmt}
            , #{serviceRequest.downPayment}
            , #{serviceRequest.usedCarAsDownPaymnt}
            , #{serviceRequest.dlrTemperature}
            , to_date(concat(SPLIT_PART(#{serviceRequest.paymntDate}, '/', 3)||'-'||SPLIT_PART(#{serviceRequest.paymntDate}, '/', 2)||'-'||SPLIT_PART(#{serviceRequest.paymntDate}, '/', 1)),'YYYY-MM-DD')
            , #{serviceRequest.paymntMethod}
            , #{serviceRequest.paymntStatus}
            , #{serviceRequest.reservationAmount}
            , #{serviceRequest.form}
            , to_date(#{serviceRequest.schedDt},'YYYY-MM-DD')
            , #{serviceRequest.schedType}
            , #{serviceRequest.usedBrand}
            , #{serviceRequest.usedChassi}
            , #{serviceRequest.usedColor}
            , #{serviceRequest.usedKm}
            , #{serviceRequest.usedMaxPrice}
            , #{serviceRequest.usedMedPrice}
            , #{serviceRequest.usedMinPrice}
            , #{serviceRequest.usedModel}
            , #{serviceRequest.usedPlate}
            , #{serviceRequest.usedVersion}
            , #{serviceRequest.usedYear}
        )    
    </insert>
    
    <insert id="insertAccessory" parameterType="IFHMBINNOCEANCDPP0034Dto">
        insert into landing.if_service_request_ws_wf_accessory(
            par_row_id
            , created
            , created_by
            , last_upd
            , last_upd_by
            , accessory
            , accessoryPrice
        )values
        <foreach collection="listOfAccessories" item="item" separator=",">
            (
                #{rowId}
                , now()
                , 'interface'
                , now()
                , 'interface'
                , #{item.accessory}
                , #{item.accessoryPrice}
            )
        </foreach>
    </insert>

    <insert id="insertPart" parameterType="IFHMBINNOCEANCDPP0034Dto">
        insert into landing.if_service_request_ws_wf_part(
            par_row_id
            , created
            , created_by
            , last_upd
            , last_upd_by
            , backOrderDate
            , backOrderFlg
            , backOrderNum
            , backOrderStatus
            , partCode
            , partDescription
        )values
        <foreach collection="listOfParts" item="item" separator=",">
            (
                #{rowId}
                , now()
                , 'interface'
                , now()
                , 'interface'
                , to_date(#{item.backOrderDate},'YYYY-MM-DD')
                , #{item.backOrderFlg}
                , #{item.backOrderNum}
                , #{item.backOrderStatus}
                , #{item.partCode}
                , #{item.partDescription}
            )
        </foreach>
    </insert>

    <insert id="transferProcess" statementType="CALLABLE" parameterType="hashMap">
        call process.if_svc_req_ws_wf(#{PARAM_ID,jdbcType=VARCHAR,mode=IN});
    </insert>
</mapper>

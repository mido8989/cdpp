<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hyundaimotors.hmb.cdppapp.mapper.AccountReverseMapper">
    <select id="getAccount" parameterType="AccountReverseDto" resultType="string">
        select 
            row_id as rowId
        from
            process.account a
        where
            row_id = #{externalId}
    </select>

    <update id="updateSflId" parameterType="AccountReverseDto">
        update process.account set
            sfid = #{sfId}
        where
            row_id = #{externalId}
    </update>

    <insert id="insertAccount" parameterType="AccountReverseDto" useGeneratedKeys="true" keyProperty="rowId" keyColumn="row_id">
        insert into process.account
		(
			billingstreet
            , billingstreet_2__c
            , billingstreet_3__c
            , neighborhood
            , billingcountry
            , billingcity
            , billingstate
            , billingpostalcode
            , billinglatitude
            , billinglongitude
            , "type"
            , firstname
            , lastname
            , personemail
            , personhomephone
            , companyphone__pc
            , workphone__c
            , personmobilephone
            , gender__pc
            , pcd__c
            , income__c
            , productofinterest__c
            , literacy__c
            , calledby__c
            , employee__c
            , favoritedealer__c
            , dealercode__c
            , crmindex__c
            , engagement__c
            , optinflag__c
            , satificationlevel__c
            , loyaltyexpirationdate__c
            , loyaltyactivationdate__c
            , loyaltystatus__c
            , cpf__c
            , receiveproductnewsflag__c
            , receiveretailoffersflag__c
            , receiveserviceoffersflag__c
            , receivenewsletterflag__c
            , receiveeventsflag__c
            , receiveresearchflag__c
            , blockedmobile__c
            , x_printed_card__c
            , blockedvideocall__c
            , preferredcontactchannel__c
            , calloptyn__pc
            , directmailoptyn__pc
            , blockedletters__c
            , emailoptyn__pc
            , blockedemails__pc
            , blockedsms__c
            , blockedwhatsapp__c
            , loyaltyengagementindex__c
            , loyaltylifecycle__c
            , salutation
            , personbirthdate
            , influentialperson__c
            , registrysource__c
            , loyaltyvalue__c
            , occupation__pc
            , corporateregistrationnumber__c
            , "name"
            , corporaterepresentativename__c
            , ori_cd__c
            , x_contracted_since__c
            , phone
            , fax
            , emailaddress__c
            , website
            , situationstatusreason__c
            , region__c
            , businesstype__c
            , industry
            , x_tot_flt_size__c
            , fleettype__c
            , dealershoptype__c
            , salesflag__c
            , serviceflag__c
            , businesshours__c
            , facebook__c
            , x_sales_rep__c
            , description
            , leadmanager__c
            , dms__c
            , apikey__c
            , whatsappphone__c
            , cust_stat_cd__c
            , partnertype__c
            , numberofemployees
            , prtnrshp_start_dt__c
            , prtnrshp_end_dt__c
            , customersap__c
            , legacy_created
            , integrationid
            , recordtypeid
            , sfid
            , process_account_type
		)values(
            #{street}
            , #{houseBuildingNo}
            , #{complement}
            , #{neighborhood}
            , #{country}
            , #{city}
            , #{state}
            , #{postalCode}
            , #{latitude}::float8
            , #{longitude}::float8
            , #{type}
            , #{firstName}
            , #{lastName}
            , #{personEmail}
            , #{personHomePhone}
            , #{workPhone}
            , #{workPhone}
            , #{personMobilePhone}
            , #{genderPC}
            , #{pcd}
            , #{income}
            , #{productOfInterest}
            , #{literacy}
            , #{calledBy}
            , case when #{employee} = 'Y' then true else false end
            , #{dealerCode}
            , #{dealerCode}
            , #{crmIndex}
            , #{engagementIndex}
            , case when #{optInFlag} = 'Y' then true else false end
            , #{satisficationLevel}
            , #{cnhexpirationDate}::timestamp
            , #{loyaltyActivationDate}::timestamp
            , #{loyaltyStatus}
            , #{cpf}
            , case when #{receiveProductNewsFlag} = 'Y' then true else false end
            , case when #{receiveRetailOffersFlag} = 'Y' then true else false end
            , case when #{receiveServiceOffersFlag} = 'Y' then true else false end
            , case when #{receiveNewsLetterFlag} = 'Y' then true else false end
            , case when #{receiveEventsFlag} = 'Y' then true else false end
            , case when #{receiveResearchFlag} = 'Y' then true else false end
            , case when #{blockedMobile} = 'Y' then true else false end
            , case when #{blockedVideoCall} = 'Y' then true else false end
            , case when #{blockedVideoCall} = 'Y' then true else false end
            , #{preferredContactChannel}
            , case when #{blockedCalls} = 'Y' then true else false end
            , case when #{blockedletters} = 'Y' then true else false end
            , case when #{blockedletters} = 'Y' then true else false end
            , case when #{blockedEmails} = 'Y' then true else false end
            , case when #{blockedEmails} = 'Y' then true else false end
            , case when #{blockedSms} = 'Y' then true else false end
            , case when #{blockedWhatsapp} = 'Y' then true else false end
            , #{engagementIndex}
            , #{lifeCycle}
            , #{salutation}
            , #{personBirthdate}::date
            , #{influentialPerson}
            , #{registrySource}
            , #{loyaltyValue}
            , #{occupation}
            , #{cnpj}
            , #{name}
            , #{nickname}
            , #{accountCategory}
            , #{contractRenewalDate}::date
            , #{phone}
            , #{fax}
            , #{emailAddress}
            , #{website}
            , #{situationStatusReason}
            , #{region}
            , #{businessType}
            , #{industry}
            , #{fleetSize}
            , #{organizationType}
            , #{dealershopType}
            , case when #{salesFlag} = 'Y' then true else false end
            , case when #{serviceFlag} = 'Y' then true else false end
            , #{businessHours}
            , #{facebook}
            , #{fleetAdministrator}
            , #{description}
            , #{leadManager}
            , #{dms}
            , #{apikey}
            , #{whatsappPhone}
            , #{situationStatus}
            , #{partnerType}
            , #{numberOfEmployees}
            , #{operationDate}::date
            , #{terminationDate}::date
            , #{customerSap}
            , #{legacyCreatedDate}::timestamp
            , #{integratedId}
            , #{recordTypeId}
            , #{sfId}
            , #{processAccountType}
        )
    </insert>

    <insert id="insertDpContact" parameterType="AccountReverseDto">
        insert into process."S_CONTACT"
        (
            row_id
            , con_cd
            , fst_name
            , last_name
            , email_addr
            , home_ph_num
            , work_ph_num
            , cell_ph_num
            , sex_mf
            , x_pne_flg
            , x_cpf
            , X_OPTIN_PRODUCT_FLG
            , X_OPTIN_RETAIL_FLG
            , X_OPTIN_OFFER_FLG
            , X_OPTIN_NEWS_FLG
            , X_OPTIN_EVENTS_FLG
            , X_OPTIN_RESEARCH_FLG
            , X_OPTIN_PHONE
            , X_SUP_GONE_AWAY
            , PREF_COMM_METH_CD
            , MARITAL_STAT_CD
            , SUPPRESS_CALL_FLG
            , SUPPRESS_MAIL_FLG
            , SUPPRESS_EMAIL_FLG
            , X_PRINTED_CARD
            , PER_TITLE
            , BIRTH_DT
            , created
            , created_by
            , last_upd
            , last_upd_by
        )
        values(
            #{rowId}
            , #{type}
            , #{firstName}
            , #{lastName}
            , #{personEmail}
            , #{personHomePhone}
            , #{workPhone}
            , #{personMobilePhone}
            , #{genderPC}
            , #{pcd}
            , #{cpf}
            , #{receiveProductNewsFlag}
            , #{receiveRetailOffersFlag}
            , #{receiveServiceOffersFlag}
            , #{receiveNewsLetterFlag}
            , #{receiveEventsFlag}
            , #{receiveResearchFlag}
            , #{blockedMobile}
            , #{blockedVideoCall}
            , #{preferredContactChannel}
            , #{maritalStatus}
            , #{blockedCalls}
            , #{blockedletters}
            , #{blockedEmails}
            , #{blockedWhatsapp}
            , #{salutation}
            , #{personBirthdate}::timestamp
            , #{legacyCreatedDate}::timestamp
            , 'SFDC'
            , #{legacyCreatedDate}::timestamp
            , 'SFDC' 
        )
    </insert>

    <insert id="insertDpContactSub" parameterType="AccountReverseDto">
        insert into process."S_CONTACT_X"
        (
            row_id
            , par_row_id
            , ATTRIB_36
            , ATTRIB_49
            , X_LITERACY
            , X_CALLED_BY
            , X_EMPLOYEE_FLG
            , X_FAVORITE_DEALER
            , x_loyalty_crm_index
            , x_loyalty_engagement
            , x_loyalty_optin_flg
            , x_loyalty_satisfaction
            , X_CNH_EXP_DATE
            , X_LOYALTY_ACT_DT
            , X_LOYALTY_STATUS
            , X_SEG_LIFE_CYCLE
            , attrib_50
            , ATTRIB_45
            , X_SEG_VALUE
            , ATTRIB_34
            , created
            , created_by
            , last_upd
            , last_upd_by
        )values(
            #{rowId}
            , #{rowId}
            , #{income}
            , #{productOfInterest}
            , #{literacy}
            , #{calledBy}
            , #{employee}
            , #{dealerCode}
            , #{crmIndex}
            , #{engagementIndex}
            , #{optInFlag}
            , #{satisficationLevel}
            , #{cnhexpirationDate}::timestamp
            , #{loyaltyActivationDate}::timestamp
            , #{loyaltyStatus}
            , #{lifeCycle}
            , #{influentialPerson}
            , #{registrySource}
            , #{loyaltyValue}
            , #{occupation}
            , #{legacyCreatedDate}::timestamp
            , 'SFDC'
            , #{legacyCreatedDate}::timestamp
            , 'SFDC'
        )
    </insert>

    <insert id="insertDpOrgExt" parameterType="AccountReverseDto">
        insert into process."S_ORG_EXT"
			(
				row_id
				, x_cnpj
				, Name
				, X_NICKNAME
				, ORI_CD
				, X_CONTRACTED_SINCE
				, SOURCE_CD
				, MAIN_PH_NUM
				, MAIN_FAX_PH_NUM
				, MAIN_EMAIL_ADDR
				, URL
				, X_REASON_STATUS
				, OU_NUM
				, REGION
				, ACCNT_TYPE_CD
				, PRTNRSHP_START_DT
				, X_WHATSAPP_PH_NUM
				, CUST_STAT_CD
				, X_SALES_REP
				, DESC_TEXT
				, created
				, created_by
				, last_upd
				, last_upd_by
			)values(
                #{rowId}
                , #{cnpj}
                , #{name}
                , #{nickname}
                , #{accountCategory}
                , #{contractRenewalDate}::timestamp
                , #{registrySource}
                , #{phone}
                , #{fax}
                , #{emailAddress}
                , #{website}
                , #{situationStatusReason}
                , #{dealerCode}
                , #{region}
                , #{type}
                , #{operationDate}::timestamp
                , #{whatsappPhone}
                , #{situationStatus}
                , #{fleetAdministrator}
                , #{description}
                , #{legacyCreatedDate}::timestamp
                , 'SFDC'
                , #{legacyCreatedDate}::timestamp
                , 'SFDC'
            )
    </insert>

    <insert id="insertReplicaAcc" parameterType="AccountReverseDto">
        insert into "replica".account
        (
            billingstreet
            , housebuildingno__c
            , complement__c
            , neighborhood__c
            , billingcountry
            , billingcity
            , billingstate
            , billingpostalcode
            , billinglatitude
            , billinglongitude
            , type
            , firstname
            , lastname
            , personemail
            , personhomephone
            , workphone__c
            , personmobilephone
            , gender__pc
            , pcd__c
            , income__c
            , productofinterest__c
            , literacy__c
            , calledby__c
            , employee__c
            , dealercode__c
            , crmindex__c
            , engagementindex__c
            , optinflag__c
            , satisficationlevel__c
            , loyaltyexpirationdate__c
            , loyaltyactivationdate__c
            , loyaltystatus__c
            , cpf__c
            , receiveproductnewsflag__c
            , receiveretailoffersflag__c
            , receiveserviceoffersflag__c
            , receivenewsletterflag__c
            , receiveeventsflag__c
            , receiveresearchflag__c
            , blockedmobile__c
            , blockedvideocall__c
            , preferredcontactchannel__c
            , blockedcalls__c
            , blockedletters__c
            , blockedemails__c
            , blockedsms__c
            , blockedwhatsapp__c
            , lifecycle__c
            , salutation
            , personbirthdate
            , influentialperson__c
            , registrysource__c
            , loyaltyvalue__c
            , occupation__pc
            , cnpj__c
            , name
            , nickname__c
            , accountcategory__c
            , contractrenewaldate__c
            , phone
            , fax
            , emailaddress__c
            , website
            , situationstatusreason__c
            , region__c
            , businesstype__c
            , industry
            , fleetsize__c
            , organizationtype__c
            , dealershoptype__c
            , salesflag__c
            , serviceflag__c
            , businesshours__c
            , facebook__c
            , fleetadministrator__c
            , description
            , leadmanager__c
            , dms__c
            , apikey__c
            , whatsappphone__c
            , situationstatus__c
            , partnertype__c
            , numberofemployees
            , operationdate__c
            , terminationdate__c
            , customersap__c
            , legacycreateddate__c
            , integratedid__c
            , recordtypeid
            , sfid
            , external_id__c
        )values(
            #{street}
            , #{houseBuildingNo}
            , #{complement}
            , #{neighborhood}
            , #{country}
            , #{city}
            , #{state}
            , #{postalCode}
            , #{latitude}::float8
            , #{longitude}::float8
            , #{type}
            , #{firstName}
            , #{lastName}
            , #{personEmail}
            , #{personHomePhone}
            , #{workPhone}
            , #{personMobilePhone}
            , #{genderPC}
            , case when #{pcd} = 'Y' then true else false end
            , #{income}
            , #{productOfInterest}
            , #{literacy}
            , #{calledBy}
            , case when #{employee} = 'Y' then true else false end
            , #{dealerCode}
            , #{crmIndex}
            , #{engagementIndex}
            , case when #{optInFlag} = 'Y' then true else false end
            , #{satisficationLevel}
            , #{cnhexpirationDate}::timestamp
            , #{loyaltyActivationDate}::timestamp
            , #{loyaltyStatus}
            , #{cpf}
            , case when #{receiveProductNewsFlag} = 'Y' then true else false end
            , case when #{receiveRetailOffersFlag} = 'Y' then true else false end
            , case when #{receiveServiceOffersFlag} = 'Y' then true else false end
            , case when #{receiveNewsLetterFlag} = 'Y' then true else false end
            , case when #{receiveEventsFlag} = 'Y' then true else false end
            , case when #{receiveResearchFlag} = 'Y' then true else false end
            , case when #{blockedMobile} = 'Y' then true else false end
            , case when #{blockedVideoCall} = 'Y' then true else false end
            , #{preferredContactChannel}
            , case when #{blockedCalls} = 'Y' then true else false end
            , case when #{blockedletters} = 'Y' then true else false end
            , case when #{blockedEmails} = 'Y' then true else false end
            , case when #{blockedSms} = 'Y' then true else false end
            , case when #{blockedWhatsapp} = 'Y' then true else false end
            , #{lifeCycle}
            , #{salutation}
            , #{personBirthdate}::date
            , #{influentialPerson}
            , #{registrySource}
            , #{loyaltyValue}
            , #{occupation}
            , #{cnpj}
            , #{name}
            , #{nickname}
            , #{accountCategory}
            , #{contractRenewalDate}
            , #{phone}
            , #{fax}
            , #{emailAddress}
            , #{website}
            , #{situationStatusReason}
            , #{region}
            , #{businessType}
            , #{industry}
            , #{fleetSize}
            , #{organizationType}
            , #{dealershopType}
            , case when #{salesFlag} = 'Y' then true else false end
            , case when #{serviceFlag} = 'Y' then true else false end
            , #{businessHours}
            , #{facebook}
            , #{fleetAdministrator}
            , #{description}
            , #{leadManager}
            , #{dms}
            , #{apikey}
            , #{whatsappPhone}
            , #{situationStatus}
            , #{partnerType}
            , #{numberOfEmployees}
            , #{operationDate}::date
            , #{terminationDate}::date
            , #{customerSap}
            , #{legacyCreatedDate}::timestamp
            , #{integratedId}
            , #{recordTypeId}
            , #{sfId}
            , #{rowId}
        )
    </insert>

    <update id="updateAccount" parameterType="AccountReverseDto">
        update process.account as pa set
            billingstreet = case when #{street} isnull then pa.billingstreet else #{street} end
            , billingstreet_2__c = case when #{houseBuildingNo} isnull then pa.billingstreet_2__c else #{houseBuildingNo} end
            , billingstreet_3__c = case when #{complement} isnull then pa.billingstreet_3__c else #{complement} end
            , neighborhood = case when #{neighborhood} isnull then pa.neighborhood else #{neighborhood} end
            , billingcountry = case when #{country} isnull then pa.billingcountry else #{country} end
            , billingcity = case when #{city} isnull then pa.billingcity else #{city} end
            , billingstate = case when #{state} isnull then pa.billingstate else #{state} end
            , billingpostalcode = case when #{postalCode} isnull then pa.billingpostalcode else  #{postalCode} end
            , billinglatitude = case when #{latitude} isnull then pa.billinglatitude else #{latitude}::float8 end
            , billinglongitude = case when #{longitude} isnull then pa.billinglongitude else #{longitude}::float8 end
            , firstname = case when #{firstName} isnull then pa.firstname else #{firstName} end
            , lastname = case when #{lastName} isnull then pa.lastname else #{lastName} end
            , personemail = case when #{personEmail} isnull then pa.personemail else #{personEmail} end
            , personhomephone = case when #{personHomePhone} isnull then pa.personhomephone else #{personHomePhone} end
            , companyphone__pc = case when  #{workPhone} isnull then pa.companyphone__pc else  #{workPhone} end
            , workphone__c = case when #{workPhone} isnull then pa.workphone__c else #{workPhone} end
            , personmobilephone = case when #{personMobilePhone} isnull then pa.personmobilephone else #{personMobilePhone} end
            , gender__pc = case when #{genderPC} isnull then pa.gender__pc else #{genderPC} end
            , pcd__c = case when #{pcd} isnull then pa.pcd__c else #{pcd} end
            , income__c = case when #{income} isnull then pa.income__c else #{income} end
            , productofinterest__c = case when #{productOfInterest} isnull then pa.productofinterest__c else #{productOfInterest} end
            , literacy__c = case when #{literacy} isnull then pa.literacy__c else #{literacy} end
            , calledby__c = case when #{calledBy} isnull then pa.calledby__c else #{calledBy} end
            , employee__c = case when #{employee} isnull then pa.employee__c else (case when #{employee} = 'Y' then true else false end) end
            , favoritedealer__c = case when #{dealerCode} isnull then pa.favoritedealer__c else #{dealerCode} end
            , dealercode__c = case when #{dealerCode} isnull then pa.dealercode__c else #{dealerCode} end
            , crmindex__c = case when #{crmIndex} isnull then pa.crmindex__c else #{crmIndex} end
            , engagement__c = case when #{engagementIndex} isnull then pa.engagement__c else #{engagementIndex} end
            , optinflag__c = case when #{optInFlag} isnull then pa.optinflag__c else (case when #{optInFlag} = 'Y' then true else false end) end
            where
            pa.row_id = #{externalId}
            <!--
            , type = case when #{type} isnull then pa.type else #{type} end
            , satificationlevel__c = case when #{satisficationLevel} isnull then pa.satificationlevel__c else #{satisficationLevel} end
            , loyaltyexpirationdate__c = case when #{cnhexpirationDate} isnull then pa.loyaltyexpirationdate__c else #{cnhexpirationDate}::timestamp end
            , loyaltyactivationdate__c = case when #{loyaltyActivationDate} isnull then pa.loyaltyactivationdate__c else #{loyaltyActivationDate}::timestamp end
            , loyaltystatus__c = case when #{loyaltyStatus} isnull then pa.loyaltystatus__c else #{loyaltyStatus} end
            , receiveproductnewsflag__c = case when #{receiveProductNewsFlag} isnull then pa.receiveproductnewsflag__c else (case when #{receiveProductNewsFlag} = 'Y' then true else false end) end
            , receiveretailoffersflag__c = case when #{receiveRetailOffersFlag} isnull then pa.receiveretailoffersflag__c else (case when #{receiveRetailOffersFlag} = 'Y' then true else false end) end
            , receiveserviceoffersflag__c = case when #{receiveServiceOffersFlag} isnull then pa.receiveserviceoffersflag__c else (case when #{receiveServiceOffersFlag} = 'Y' then true else false end) end
            , receivenewsletterflag__c = case when  #{receiveNewsLetterFlag} isnull then pa.receivenewsletterflag__c else (case when #{receiveNewsLetterFlag} = 'Y' then true else false end) end
            , receiveeventsflag__c = case when #{receiveEventsFlag} isnull then pa.receiveeventsflag__c else (case when #{receiveEventsFlag} = 'Y' then true else false end) end
            , receiveresearchflag__c = case when #{receiveResearchFlag} isnull then pa.receiveresearchflag__c else (case when #{receiveResearchFlag} = 'Y' then true else false end) end
            , blockedmobile__c = case when #{blockedMobile} isnull then pa.blockedmobile__c else (case when #{blockedMobile} = 'Y' then true else false end) end
            , x_printed_card__c = case when #{blockedVideoCall} isnull then pa.x_printed_card__c else (case when #{blockedVideoCall} = 'Y' then true else false end) end
            , blockedvideocall__c = case when #{blockedVideoCall} isnull then pa.blockedvideocall__c else (case when #{blockedVideoCall} = 'Y' then true else false end) end
            , preferredcontactchannel__c = case when #{preferredContactChannel} isnull then pa.preferredcontactchannel__c else #{preferredContactChannel} end
            , calloptyn__pc = case when #{blockedCalls} isnull then pa.calloptyn__pc else (case when #{blockedCalls} = 'Y' then true else false end) end
            , directmailoptyn__pc = case when #{blockedletters} isnull then pa.directmailoptyn__pc else (case when #{blockedletters} = 'Y' then true else false end) end
            , blockedletters__c = case when #{blockedletters} isnull then pa.blockedletters__c else (case when #{blockedletters} = 'Y' then true else false end) end
            , emailoptyn__pc = case when #{blockedEmails} isnull then pa.emailoptyn__pc else (case when #{blockedEmails} = 'Y' then true else false end) end
            , blockedemails__pc = case when #{blockedEmails} isnull then pa.blockedemails__pc else (case when #{blockedEmails} = 'Y' then true else false end) end
            , blockedsms__c = case when #{blockedSms} isnull then pa.blockedsms__c else (case when #{blockedSms} = 'Y' then true else false end) end
            , blockedwhatsapp__c = case when  #{blockedWhatsapp} isnull then pa.blockedwhatsapp__c else (case when #{blockedWhatsapp} = 'Y' then true else false end) end
            , loyaltyengagementindex__c = case when  #{engagementIndex} isnull then pa.loyaltyengagementindex__c else #{engagementIndex} end
            , loyaltylifecycle__c = case when #{lifeCycle} isnull then pa.loyaltylifecycle__c else #{lifeCycle} end
            , salutation = case when #{salutation} isnull then pa.salutation else #{salutation} end
            , personbirthdate = case when #{personBirthdate} isnull then pa.personbirthdate else #{personBirthdate}::date end 	
            , influentialperson__c = case when #{influentialPerson} isnull then pa.influentialperson__c else #{influentialPerson} end
            , registrysource__c = case when #{registrySource} isnull then pa.registrysource__c else #{registrySource} end
            , loyaltyvalue__c = case when #{loyaltyValue} isnull then pa.loyaltyvalue__c else #{loyaltyValue} end
            , occupation__pc = case when #{occupation} isnull then pa.occupation__pc else #{occupation} end
            , corporateregistrationnumber__c = case when #{cnpj} isnull then pa.corporateregistrationnumber__c else #{cnpj} end
            , "name" = case when #{name} isnull then pa."name" else #{name} end
            , corporaterepresentativename__c = case when #{nickname} isnull then pa.corporaterepresentativename__c else #{nickname} end
            , ori_cd__c = case when #{accountCategory} isnull then pa.ori_cd__c else #{accountCategory} end
            , x_contracted_since__c = case when #{contractRenewalDate} isnull then pa.x_contracted_since__c else #{contractRenewalDate}::date end
            , phone = case when #{phone} isnull then pa.phone else #{phone} end
            , fax = case when #{fax} isnull then pa.fax else #{fax} end
            , emailaddress__c = case when #{emailAddress} isnull then pa.emailaddress__c else #{emailAddress} end
            , website = case when #{website} isnull then pa.website else #{website} end
            , situationstatusreason__c = case when #{situationStatusReason} isnull then pa.situationstatusreason__c else #{situationStatusReason} end
            , region__c = case when #{region} isnull then pa.region__c else #{region} end
            , businesstype__c = case when #{businessType} isnull then pa.businesstype__c else #{businessType} end
            , industry = case when #{industry} isnull then pa.industry else #{industry} end
            , x_tot_flt_size__c = case when #{fleetSize} isnull then pa.x_tot_flt_size__c else #{fleetSize} end
            , fleettype__c = case when #{organizationType} isnull then pa.fleettype__c else #{organizationType} end
            , dealershoptype__c = case when  #{dealershopType} isnull then pa.dealershoptype__c else  #{dealershopType} end
            , salesflag__c = case when #{salesFlag} isnull then pa.salesflag__c else (case when #{salesFlag} = 'Y' then true else false end) end
            , serviceflag__c = case when #{serviceFlag} isnull then pa.serviceflag__c else (case when #{serviceFlag} = 'Y' then true else false end) end
            , businesshours__c = case when #{businessHours} isnull then pa.businesshours__c else #{businessHours} end
            , facebook__c = case when #{facebook} isnull then pa.facebook__c else #{facebook} end
            , x_sales_rep__c = case when #{fleetAdministrator} isnull then pa.x_sales_rep__c else #{fleetAdministrator} end
            , description = case when #{description} isnull then pa.description else #{description} end
            , leadmanager__c = case when #{leadManager} isnull then pa.leadmanager__c else #{leadManager} end
            , dms__c = case when #{dms} isnull then pa.dms__c else #{dms} end
            , apikey__c = case when #{apikey} isnull then pa.apikey__c else #{apikey} end
            , whatsappphone__c = case when #{whatsappPhone} isnull then pa.whatsappphone__c else #{whatsappPhone} end
            , cust_stat_cd__c = case when #{situationStatus} isnull then pa.cust_stat_cd__c else #{situationStatus} end
            , partnertype__c = case when #{partnerType} isnull then pa.partnertype__c else #{partnerType} end
            , numberofemployees = case when #{numberOfEmployees} isnull then pa.numberofemployees else #{numberOfEmployees} end
            , prtnrshp_start_dt__c = case when #{operationDate} isnull then pa.prtnrshp_start_dt__c else #{operationDate}::date end
            , prtnrshp_end_dt__c = case when #{terminationDate} isnull then pa.prtnrshp_end_dt__c else #{terminationDate}::date end
            , customersap__c = case when #{customerSap} isnull then pa.customersap__c else #{customerSap} end
            , integrationid = case when #{integratedId} isnull then pa.integrationid else #{integratedId} end
        where
            pa.row_id = #{externalId}-->
    </update>
</mapper>
